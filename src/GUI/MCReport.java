/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DBConnection.DBConnection;
import Helper.J;
import Helper.S;
import Helper.Session;
import Process.MainRetrieval;
import api.Patient;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaapplication1.DriversLocation;
import javaapplication1.PDFiText;
import javax.swing.JOptionPane;
import library.Func;
import library.LongRunProcess;
import library.Q;
import oms.rmi.server.Message;

/**
 *
 * @author End User
 */
public class MCReport extends javax.swing.JFrame {

    /**
     * Creates new form MCReport
     */
    
    private int num_row = 50;
    private int num_col = 5;
    private String pmiNo = "-";
    private String cpyFile_history = "-";
    
    public MCReport() {
        initComponents();
    }
    
    private void clearTable() {
        cpyFile_history = "-";
        btn_generatemc.setEnabled(false);
        for (int i = 0; i < num_row; i++) {
            for (int j = 0; j < num_col; j++) {
                tbl_mc.getModel().setValueAt("", i, j);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        label1 = new java.awt.Label();
        jPanel14 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_pmiser = new javax.swing.JTextField();
        cbx_idtype = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_ic = new javax.swing.JTextField();
        txt_idno = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        rbtn_new = new javax.swing.JRadioButton();
        rbtn_old = new javax.swing.JRadioButton();
        btnSearchPatient = new javax.swing.JButton();
        btnReadMyKadRegister = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_mc = new javax.swing.JTable();
        btn_generatemc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Clinical Support System");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setBackground(new java.awt.Color(51, 51, 255));
        label1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 255, 255));
        label1.setText("MC Report");

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "SEARCH PATIENT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("PMI No.");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Id Type");

        txt_pmiser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_pmiser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_pmiserMouseClicked(evt);
            }
        });
        txt_pmiser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_pmiserEnablePMIRegister(evt);
            }
        });

        cbx_idtype.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cbx_idtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Id Type", "Police", "Army", "Foreigner" }));
        cbx_idtype.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbx_idtypeItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("IC No.");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText("Identification No.");

        txt_ic.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_ic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_icMouseClicked(evt);
            }
        });
        txt_ic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_icEnableICRegister(evt);
            }
        });

        txt_idno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_idno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_idnoMouseClicked(evt);
            }
        });
        txt_idno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_idnoEnableIDRegister(evt);
            }
        });

        rbtn_new.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rbtn_new.setSelected(true);
        rbtn_new.setText("New");

        rbtn_old.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rbtn_old.setText("Old");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(rbtn_new)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtn_old)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtn_old, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtn_new, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnSearchPatient.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnSearchPatient.setText("Search");
        btnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPatientActionPerformed(evt);
            }
        });

        btnReadMyKadRegister.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnReadMyKadRegister.setText("Read MyKAD Info");
        btnReadMyKadRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadMyKadRegisterActionPerformed(evt);
            }
        });

        jButton7.setText("Clear");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_pmiser, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx_idtype, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_ic, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_idno, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchPatient)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnReadMyKadRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txt_pmiser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton7))
                .addGap(7, 7, 7)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnReadMyKadRegister)
                    .addComponent(btnSearchPatient)
                    .addComponent(txt_idno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cbx_idtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HISTORY OF MC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        tbl_mc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Visit Date", "Date From-To", "Diagnosis", "Dr Name", "Hospital/Clinic"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_mc);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 921, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        btn_generatemc.setText("Generate MC");
        btn_generatemc.setEnabled(false);
        btn_generatemc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generatemcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_generatemc, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_generatemc)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ReportMenu reportMenu = new ReportMenu();
        reportMenu.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_pmiserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_pmiserMouseClicked
        // TODO add your handling code here:
        txt_ic.setEditable(false);
        txt_idno.setEditable(false);
        txt_pmiser.setEditable(true);
        cbx_idtype.setSelectedIndex(0);
    }//GEN-LAST:event_txt_pmiserMouseClicked

    private void txt_pmiserEnablePMIRegister(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pmiserEnablePMIRegister
        // TODO add your handling code here:
        if (txt_pmiser.getText().length() <= 1) {
            clearTable();
        }
        if (txt_pmiser.getText().length() != 0) {
            txt_ic.setEditable(false);
            txt_idno.setEditable(false);
        } else {
            txt_ic.setEditable(true);
            txt_idno.setEditable(true);
        }
        txt_ic.setText("");
        txt_idno.setText("");
        cbx_idtype.setSelectedIndex(0);
    }//GEN-LAST:event_txt_pmiserEnablePMIRegister

    private void cbx_idtypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbx_idtypeItemStateChanged
        // TODO add your handling code here:
        if (cbx_idtype.getSelectedIndex() == 0) {
            txt_idno.setEditable(false);
        } else {
            txt_idno.setEditable(true);
        }
    }//GEN-LAST:event_cbx_idtypeItemStateChanged

    private void txt_icMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_icMouseClicked
        // TODO add your handling code here:
        txt_ic.setEditable(true);
        txt_idno.setEditable(false);
        txt_pmiser.setEditable(false);
        cbx_idtype.setSelectedIndex(0);
    }//GEN-LAST:event_txt_icMouseClicked

    private void txt_icEnableICRegister(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_icEnableICRegister
        // TODO add your handling code here:
        if (txt_ic.getText().length() <= 1) {
            clearTable();
        }
        if (txt_ic.getText().length() != 0) {
            txt_pmiser.setEditable(false);
            txt_idno.setEditable(false);
        } else {
            txt_pmiser.setEditable(true);
            txt_idno.setEditable(true);
        }
        txt_pmiser.setText("");
        txt_idno.setText("");
        cbx_idtype.setSelectedIndex(0);
    }//GEN-LAST:event_txt_icEnableICRegister

    private void txt_idnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_idnoMouseClicked
        // TODO add your handling code here:
        txt_ic.setEditable(false);
        txt_idno.setEditable(true);
        txt_pmiser.setEditable(false);
    }//GEN-LAST:event_txt_idnoMouseClicked

    private void txt_idnoEnableIDRegister(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idnoEnableIDRegister
        // TODO add your handling code here:
        if (txt_idno.getText().length() <= 1) {
            clearTable();
        }
        if (txt_idno.getText().length() != 0) {
            txt_pmiser.setEditable(false);
            txt_ic.setEditable(false);
        } else {
            txt_pmiser.setEditable(true);
            txt_ic.setEditable(true);
        }
        txt_pmiser.setText("");
        txt_ic.setText("");
    }//GEN-LAST:event_txt_idnoEnableIDRegister

    private void btnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPatientActionPerformed
        // TODO add your handling code here:
        clearTable();
        searchPatient();
    }//GEN-LAST:event_btnSearchPatientActionPerformed

    private void searchPatientNetwork(String search, String idtype, int type) throws SQLException {
//        LongRunProcess.check_network2();
        
        boolean offline = false;
        
        String sql = "";
        String sql_history = "";
        String cpyFile = "";
        String status = "1";
        String coldata[] = new String[100]; //100, maximum number of column
//        if (Session.getPrev_stat()) {
            //Read BLOB from EHR_Central
            System.err.println();
            System.err.println("Server Online");
            System.out.println("Start invoke remote server");
            try {
                // fire to server port 1099
//                ArrayList<String> listOnline = Func.readXML("online");
//                Registry myRegistry = LocateRegistry.getRegistry(listOnline.get(0), 1099);
//
//                // search for myMessage service
//                Message impl = (Message) myRegistry.lookup("myMessage");
                // call server's method			
                //impl.sayHello("..Friza ");

                DBConnection.getImpl().sayHello("UMAR");

                pmiNo = DBConnection.getImpl().getPMINo(search, idtype, type);
                ArrayList<String> arData = DBConnection.getImpl().getEHRRecords(pmiNo, 1);
                cpyFile = arData.get(0);
                status = arData.get(1);
                cpyFile_history = arData.get(2);

                System.out.println(".....Message Sent....");
            } catch (Exception e) {
                offline = true;
            }
//        } else {
//            offline = true;
//        }
        
        if (offline) {
            
            pmiNo = DBConnection.getPMINo(search, idtype, type);
            
            //Read BLOB from Journal_File
            sql = "SELECT TXNDATA, STATUS2 "
                    + "FROM PUBLIC.JOURNAL_FILE "
                    + "WHERE PMI_NO LIKE ? "
                    + "ORDER BY TXNDATE DESC "
                    + "LIMIT 1";
            sql_history = "SELECT TXNDATA "
                    + "FROM PUBLIC.JOURNAL_FILE "
                    + "WHERE PMI_NO LIKE ? "
                    + "AND STATUS2 = 1 "
                    + "ORDER BY TXNDATE DESC "
                    + "LIMIT 50";
            coldata[0] = "TXNDATA";
            coldata[1] = "STATUS2";
            /**
             * keluar pada form *
             */
            Q.ps = Session.getCon_x(100).prepareStatement(sql);
            Q.ps.setString(1, pmiNo);
            Q.rs = Q.ps.executeQuery();
            if (Q.rs.next()) {
                cpyFile = Q.rs.getString(coldata[0]);
                status = Q.rs.getString(coldata[1]);
            }

            /**
             * keluar pada 7 history *
             */
            Q.ps = Session.getCon_x(100).prepareStatement(sql_history);
            Q.ps.setString(1, pmiNo);
            Q.rs = Q.ps.executeQuery();
            while (Q.rs.next()) {
                cpyFile_history += Q.rs.getString(coldata[0]);
            }
        }

//        Session.setPrev_stat(false);
//        Session.setCurr_stat(false);
        
        int data_limit = 100;
        
        /**
         * latest 7 history *
         */
        int rows_tbl = 50;
        MainRetrieval mr[] = new MainRetrieval[data_limit];
        for (int i = 0; i < data_limit; i++) {
            mr[i] = new MainRetrieval();
            mr[i].startProcess(cpyFile_history);
        }
        String msg[][][] = new String[data_limit][data_limit][data_limit];
        int row[] = new int[data_limit];
        msg[0] = mr[0].getData("MEC");
        row[0] = mr[0].getRowNums();
        if (row[0] > 0) {
            btn_generatemc.setEnabled(true);
            for (int i = 0; i < row[0] && i < rows_tbl; i++) {
                tbl_mc.getModel().setValueAt(msg[0][i][0], i, 0);
                tbl_mc.getModel().setValueAt(msg[0][i][12]+" - "+msg[0][i][13], i, 1);
                tbl_mc.getModel().setValueAt(msg[0][i][2], i, 2);
                tbl_mc.getModel().setValueAt(msg[0][i][19], i, 3);
                tbl_mc.getModel().setValueAt(msg[0][i][17], i, 4);
            }
        } else {
            J.o("No Data", "No MC available for this patient.", 1);
        }
    }
    
    private void searchPatient() {
        
        //SEARCH USING PMI NO
        if (txt_pmiser.getText() != null && (txt_pmiser.getText().length() != 0)) {
            try {
                searchPatientNetwork(txt_pmiser.getText(), "", 1);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

        //SEARCH USING NEW IC NO
        if ((txt_ic.getText() != null) && (rbtn_new.isSelected() == true) && (txt_ic.getText().length() != 0) && (txt_ic.getText() != "")) {
            try {
                searchPatientNetwork(txt_ic.getText(), "", 2);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

        //SEARCH USING OLD IC NO
        if ((txt_ic.getText() != null) && (rbtn_old.isSelected() == true) && (txt_ic.getText().length() != 0) && (txt_ic.getText() != "")) {
            try {
                searchPatientNetwork(txt_ic.getText(), "", 3);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

        //SEARCH USING ID TYPE AND ID NO
        if ((txt_idno.getText() != null) && (cbx_idtype.getSelectedIndex() != 0) && (txt_idno.getText().length() != 0) && (txt_idno.getText() != "")) {
            try {
                searchPatientNetwork(txt_idno.getText(), cbx_idtype.getSelectedItem().toString(), 4);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

        if (txt_pmiser.getText().length() == 0 && (txt_ic.getText().length() == 0) && (txt_idno.getText().length() == 0)) {
            JOptionPane.showMessageDialog(null, "Please key in PMI No or IC No or Identification No to continue searching process!!!", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void btnReadMyKadRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadMyKadRegisterActionPerformed
        // TODO add your handling code here:

        MyKad mykad = new MyKad();
        mykad.start();
        mykad.useJPN();
        mykad.readData();
        
        clearSearch();

        txt_ic.setText(mykad.ic);
        rbtn_new.setSelected(true);
        rbtn_old.setSelected(false);
        
        searchPatient();

        mykad.stop();
    }//GEN-LAST:event_btnReadMyKadRegisterActionPerformed
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        clearSearch();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btn_generatemcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generatemcActionPerformed
        // TODO add your handling code here:
        
        try {
            
            int row = tbl_mc.getSelectedRow();
            
            if (row != -1) {
                
                String episodeDate = String.valueOf(tbl_mc.getValueAt(row, 0));
                String dateFromTo = String.valueOf(tbl_mc.getValueAt(row, 1));
                String diagnosis = String.valueOf(tbl_mc.getValueAt(row, 2));
                String drName = String.valueOf(tbl_mc.getValueAt(row, 3));
                String hospital = String.valueOf(tbl_mc.getValueAt(row, 4));
                
                String data_temp = cpyFile_history;
                String date_from1 = "-";
                String date_to1 = "-";
                String time1 = "-";
                String time2 = "-";
                
                MainRetrieval mr = new MainRetrieval();
                mr.startProcess(data_temp);
                String data[][] = mr.getData("MEC");
                int num = mr.getRowNums();
                
                if (num > 0) {
                    for (int i = 0; i < num; i++) {
                        if (data[i][0].equals(episodeDate)) {
                            date_from1 = data[i][12];
                            date_to1 = data[i][13];
                            time1 = data[i][10];
                            time2 = data[i][11];
                        }
                    }
                }

                ArrayList<String> masa = new ArrayList<String>();
                masa.add(time1);
                masa.add(time2);
                masa.add(date_from1);
                masa.add(date_to1);
                PDFiText.createMC("assets/MC_.pdf", data_temp, masa);
            } else {
                J.o("Row Not Selected", "Not row selected!\nPlease select 1 mc from the list ...", 0);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_generatemcActionPerformed

    private void clearSearch() {
        pmiNo = "-";
        txt_ic.setText("");
        txt_idno.setText("");
        txt_pmiser.setText("");
        cbx_idtype.setSelectedIndex(0);
        rbtn_new.setSelected(true);
        rbtn_old.setSelected(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MCReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MCReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MCReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MCReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MCReport().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReadMyKadRegister;
    private javax.swing.JButton btnSearchPatient;
    private javax.swing.JButton btn_generatemc;
    private javax.swing.JComboBox cbx_idtype;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private javax.swing.JRadioButton rbtn_new;
    private javax.swing.JRadioButton rbtn_old;
    private javax.swing.JTable tbl_mc;
    private javax.swing.JTextField txt_ic;
    private javax.swing.JTextField txt_idno;
    private javax.swing.JTextField txt_pmiser;
    // End of variables declaration//GEN-END:variables
}
