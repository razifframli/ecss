/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import Bean.GCS_Month;
import Bean.GCS_Response;
import Bean.GCS_Scale;
import DBConnection.DBConnection;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javaapplication1.Consultation;
import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.Border;

/**
 *
 * @author End User
 */
public class GCS_GUI extends javax.swing.JFrame {

    private static Consultation cons;
    
    /**
     * Creates new form GCS_GUI
     */
    public GCS_GUI() {
        initComponents();
        
        setData();
        
        pack();
    }
    
    public void setParent(Consultation con) {
        cons = con;
        cons.resizeTbl_gcs(response.size());
    }
    
    protected static ArrayList<GCS_Response> response = DBConnection.getGcs_responseAll("gcs");
    protected static int max_size = 100;
    protected static JCheckBox cbx[][] = new JCheckBox[max_size][max_size];
    protected static int points = 0;
    
    public static void setData() {
        final int s1 = response.size();
        JPanel p1[] = new JPanel[s1];
        
        pnl_gcs.setLayout(new GridLayout(s1, 1));
        for (int i = 0; i < s1; i++) {
            p1[i] = new JPanel();
            p1[i].setBorder(BorderFactory.createTitledBorder(response.get(i).getResponse_name()));
            GCS_Month month = new GCS_Month();
            month.setMonth_code("6");
            ArrayList<GCS_Scale> scale = DBConnection.getGcs_scaleAll_parent(response.get(i), month);
            final int s2 = scale.size();
            p1[i].setLayout(new GridLayout(s2, 2));
            for (int j = 0; j < s2; j++) {
                JLabel lbl = new JLabel(scale.get(j).getScale_desc());
                cbx[i][j] = new JCheckBox();
                cbx[i][j].setName(scale.get(j).getScale_code());
                cbx[i][j].addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        int iii = 0;
                        int jjj = 0;
                        for (int ii = 0; ii < s1; ii++) {
                            for (int jj = 0; jj < s2; jj++) {
                                if (e.getSource().equals(cbx[ii][jj])) {
                                    iii = ii;
                                    jjj = jj;
                                }
                            }
                        }
                        for (int jj = 0; jj < s2; jj++) {
                            if (jj != jjj) {
                                cbx[iii][jj].setSelected(false);
                            }
                        }
                        calcPoints();
                    }
                });
                p1[i].add(cbx[i][j]);
                p1[i].add(lbl);
            }
            pnl_gcs.add(p1[i]);
        }
    }
    
    public static void calcPoints() {
        cons.clearTableGCS();
        points = 0;
        for (int i = 0; i < response.size(); i++) {
            GCS_Month month = new GCS_Month();
            month.setMonth_code("6");
            ArrayList<GCS_Scale> scale = DBConnection.getGcs_scaleAll_parent(response.get(i), month);
            for (int j = 0; j < scale.size(); j++) {
                if (cbx[i][j] != null && cbx[i][j].isSelected()) {
                    String code = cbx[i][j].getName();
                    GCS_Scale g_temp = new GCS_Scale();
                    g_temp.setScale_code(code);
                    GCS_Scale gcs = DBConnection.getGcs_scale(g_temp);
                    cons.tbl_gcs.getModel().setValueAt(gcs.getScale_desc(), i, 0);
                    int point = Integer.parseInt(gcs.getScale_score().split(" ")[0]);
                    cons.tbl_gcs.getModel().setValueAt(point, i, 1);
                    points += point;
                }
            }
        }
        String total = points + " point";
        total = points > 1 ? total + "s" : total;
        txt_total.setText(total);
        String result = "";
        if (points <= 8) {
            result = "Severe Brain Injury";
        } else if (points > 8 && points <= 12) {
            result = "Moderate Brain Injury";
        } else if (points > 12 && points <= 14 ) {
            result = "Minor Brain Injury";
        } else {
            result = "Normal";
        }
        txt_result.setText(result);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();
        txt_result = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnl_gcs = new javax.swing.JPanel();

        setTitle("Glasgow Coma Scale (GCS)");
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(173, 182, 200));

        jPanel1.setBackground(new java.awt.Color(173, 182, 200));

        jLabel1.setText("Total Points :");

        jLabel2.setText("Result :");

        txt_total.setEditable(false);

        txt_result.setEditable(false);

        jButton1.setText("Done");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        pnl_gcs.setBackground(new java.awt.Color(173, 182, 200));

        javax.swing.GroupLayout pnl_gcsLayout = new javax.swing.GroupLayout(pnl_gcs);
        pnl_gcs.setLayout(pnl_gcsLayout);
        pnl_gcsLayout.setHorizontalGroup(
            pnl_gcsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );
        pnl_gcsLayout.setVerticalGroup(
            pnl_gcsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 285, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(pnl_gcs);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_total)
                    .addComponent(txt_result, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String total = txt_total.getText();
        String result = txt_result.getText();
        cons.txt_gcs_points.setText(total);
        cons.txt_gcs_result.setText(result);
        cons.gcs_gui.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GCS_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GCS_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GCS_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GCS_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GCS_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    protected static javax.swing.JPanel pnl_gcs;
    protected static javax.swing.JTextField txt_result;
    protected static javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables
}
