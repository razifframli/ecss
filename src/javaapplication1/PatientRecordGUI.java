/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PatientRecordGUI.java
 *
 * Created on Jun 8, 2011, 10:59:58 AM
 */

package javaapplication1;

import Helper.J;
import Helper.Session;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;

/**
 *
 * @author user
 */
public class PatientRecordGUI extends javax.swing.JFrame {

    public static Consultation consultation;

    /** Creates new form PatientRecordGUI */
    public PatientRecordGUI() {
        initComponents();
    }

    /** Creates new form ViewDataTable */
    public PatientRecordGUI(Consultation consultation) {
        this.consultation = consultation;
        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_records = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tbl_records.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Visit Date", "Diagnosis", "Drugs", "Health Facility Code"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_records);
        tbl_records.getColumnModel().getColumn(0).setPreferredWidth(15);
        tbl_records.getColumnModel().getColumn(1).setPreferredWidth(30);
        tbl_records.getColumnModel().getColumn(2).setPreferredWidth(100);
        tbl_records.getColumnModel().getColumn(3).setPreferredWidth(30);

        jLabel1.setText("Patient Health Record");

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(btnClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnClose)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        //J.o("hahaha", "hahaha", 1);
        
        tbl_records = new javax.swing.JTable();

         tbl_records.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Visit Date", "Diagnosis", "Drugs", "Health Facility Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_records);
        int i = 0;

        try
        {
            //Connection conn = DatabaseConnection.connect();
         
            //Display EHR in Patient Health Records screen
            PreparedStatement ps = Session.getCon_x(100).prepareStatement("SELECT CHIEF_COMPLAINTS.*,DRUG_ADDICT.* "
                    +"FROM CHIEF_COMPLAINTS, DRUG_ADDICT "
                    +"WHERE CHIEF_COMPLAINTS.CC_ID = DRUG_ADDICT.CC_ID AND CHIEF_COMPLAINTS.PMI_NO = ?");

            ResultSet rs = ps.executeQuery();
            ps.setString(1, this.consultation.getSelectedAppointment());

            Timestamp datetime=null;
            String problem="";
            String drug="";

            int initial=0;
            while(rs.next())
            {
                if(initial==0){
                  datetime = rs.getTimestamp("ENCOUNTER_DATE");
                  problem = rs.getString("PROBLEM");
                  drug = rs.getString("DRUG_NAME");
                  initial++;
                }
                else if(datetime.equals(rs.getTimestamp("ENCOUNTER_DATE")))
                {
                    problem = problem+","+rs.getString("PROBLEM");
                    drug = drug+","+rs.getString("DRUG_NAME");
              
                } else if(!datetime.equals(rs.getTimestamp("ENCOUNTER_DATE"))){

                     tbl_records.setValueAt(datetime,i,0);
                     tbl_records.setValueAt(problem,i,1);
                     tbl_records.setValueAt(drug,i,2);
                     i++;

                     datetime = rs.getTimestamp("ENCOUNTER_DATE");
                     problem = rs.getString("PROBLEM");
                     drug = rs.getString("DRUG_NAME");                 
                }

                if(rs.isLast()){
                     tbl_records.setValueAt(datetime,i,0);
                     tbl_records.setValueAt(problem,i,1);
                     tbl_records.setValueAt(drug,i,2);
                     i++;
                }
                 
                 System.out.print(datetime+problem+drug+"\n");

                 //Date date = new Date(datetime.getTime());                
            }
       }
       catch(Exception ex)
       {
            System.out.print(ex);
       }

        tbl_records.addMouseListener(new java.awt.event.MouseAdapter(){
          public void mouseClicked(java.awt.event.MouseEvent evt) {

                //get selected row number
                final int rowNo = tbl_records.getSelectedRow();              
                String selectedDate =  tbl_records.getValueAt(rowNo, 0).toString();                
                String cproblem;
                String severity;
                String ccomment;
                int index = 0;
                String diagType;
                String diagSeverity;
                String diagDate;
                String immDate;
                String immType;
                String immComm;
                String vsweight;
                String vsheight;
                String vspulse;
                String disType;
                String disDate;
                String allType;
                String allDate;
                String shType;
                String shDate;
                String drugName;
                String dose;
                String freq;
                //consultation.lblVisitDate.setText(selectedDate);
                //String id =  tbl_records.getValueAt(rowNo, 1).toString();

                try
                {
                    //Connection conn = DatabaseConnection.connect();

                    //Display data in c.complaints table
                    String sql="SELECT PROBLEM,SEVERITY,C_COMMENT FROM CHIEF_COMPLAINTS WHERE ENCOUNTER_DATE=?";
                    //prepare the sql query and execute it
                    PreparedStatement ps = Session.getCon_x(1000).prepareStatement(sql);
                    ps.setString(1,selectedDate);
                    ResultSet result = ps.executeQuery();
                    consultation.lbl_ccdate.setText(selectedDate);

                    while(result.next())
                    {
                       System.out.print("ccn");
                       cproblem = result.getString("PROBLEM");
                       severity = result.getString("SEVERITY");
                       ccomment = result.getString("C_COMMENT");
                       consultation.tbl_cc.setValueAt(cproblem,index,0);
                       consultation.tbl_cc.setValueAt(severity,index,1);
                       consultation.tbl_cc.setValueAt(ccomment,index,2);
                       index++;
                    }
                    //Display data to text fields frm c.complaints table
                    consultation.tbl_cc.addMouseListener(new java.awt.event.MouseAdapter(){
                    public void mouseClicked(java.awt.event.MouseEvent evt) {

                         try
                         {
                                //Connection conn = DatabaseConnection.connect();
                                int selectedRow = consultation.tbl_cc.getSelectedRow();
                                String selectedProblem =  consultation.tbl_cc.getValueAt(selectedRow, 0).toString();

                                String sql="SELECT * FROM CHIEF_COMPLAINTS WHERE ENCOUNTER_DATE=? AND PROBLEM =?";
                                //prepare the sql query and execute it
                                PreparedStatement ps = Session.getCon_x(1000).prepareStatement(sql);
                                ps.setString(1,consultation.lbl_ccdate.getText());
                                ps.setString(2,selectedProblem);
                                ResultSet result = ps.executeQuery();

                                while(result.next())
                                {
                                   System.out.print("ccn");
                                   consultation.txt_complaintSearch.setText(result.getString("PROBLEM"));
                                   consultation.cbx_cSeverity.setSelectedItem(result.getString("SEVERITY"));
                                   consultation.cbx_site.setSelectedItem(result.getString("SITE"));
                                   consultation.txt_duration.setText(result.getString("DURATION"));
                                   consultation.cbx_laterality.setSelectedItem(result.getString("LATERALITY"));
                                   consultation.txt_complaintComment.setText(result.getString("C_COMMENT"));
                                }
                          }
                          catch(Exception ex)
                          {
                                System.out.print(ex);
                          }

                    }
                    });//end tbl_cc

                    //Display data in diagnosis table
                    String sql2="SELECT * FROM DIAGNOSIS WHERE ENCOUNTER_DATE=?";
                    //prepare the sql query and execute it
                    PreparedStatement ps2 = Session.getCon_x(1000).prepareStatement(sql2);
                    ps2.setString(1,selectedDate);
                    ResultSet rs2 = ps2.executeQuery();
                    consultation.lbl_diagdate.setText(selectedDate);

                    int index1=0;
                    while(rs2.next())
                    {
                       System.out.print("DIAG");
                       diagType = rs2.getString("DIAGNOSIS_TYPE");
                       diagSeverity = rs2.getString("SEVERITY");
                       diagDate = rs2.getString("DIAG_DATE");
                       consultation.tbl_dgs.setValueAt(diagType,index1,0);
                       consultation.tbl_dgs.setValueAt(diagSeverity,index1,1);
                       consultation.tbl_dgs.setValueAt(diagDate,index1,2);
                       index1++;
                    }

                    //Display data to text fields frm diagnosis table
                    consultation.tbl_dgs.addMouseListener(new java.awt.event.MouseAdapter(){
                    public void mouseClicked(java.awt.event.MouseEvent evt) {

                         try
                         {
                                //Connection conn = DatabaseConnection.connect();
                                int selectedDiagRow = consultation.tbl_dgs.getSelectedRow();
                                String selectedDiag =  consultation.tbl_dgs.getValueAt(selectedDiagRow, 0).toString();

                                String sql="SELECT * FROM DIAGNOSIS WHERE ENCOUNTER_DATE=? AND DIAGNOSIS_TYPE =?";
                                //prepare the sql query and execute it
                                PreparedStatement ps2 = Session.getCon_x(1000).prepareStatement(sql);
                                ps2.setString(1,consultation.lbl_diagdate.getText());
                                ps2.setString(2,selectedDiag);
                                ResultSet rs2 = ps2.executeQuery();

                                while(rs2.next())
                                {
                                   consultation.txt_diagnosisSearch.setText(rs2.getString("DIAGNOSIS_TYPE"));
                                   consultation.cbx_dSeverity.setSelectedItem(rs2.getString("SEVERITY"));
                                   consultation.txt_date1.setDate(rs2.getDate("DIAG_DATE"));
                                }
                          }
                          catch(Exception ex)
                          {
                                System.out.print(ex);
                          }
                    }
                    });//end tbl_diag

                    //Display data in immunisation table
                    String sql3="SELECT * FROM IMMUNISATION WHERE ENCOUNTER_DATE=?";
                    //prepare the sql query and execute it
                    PreparedStatement ps3 = Session.getCon_x(1000).prepareStatement(sql3);
                    ps3.setString(1,selectedDate);
                    ResultSet rs3 = ps3.executeQuery();
                    consultation.lbl_immdate.setText(selectedDate);

                    int index2=0;
                    while(rs3.next())
                    {
                       System.out.print("imm");
                       immType = rs3.getString("IMMU_TYPE");
                       immDate = rs3.getString("IMMU_DATE");
                       consultation.tbl_imu.setValueAt(immType,index2,0);
                       consultation.tbl_imu.setValueAt(immDate,index2,1);
                       index2++;
                    }

                    //Display data to text fields frm immunisation table
                    consultation.tbl_imu.addMouseListener(new java.awt.event.MouseAdapter(){
                    public void mouseClicked(java.awt.event.MouseEvent evt) {

                         try
                         {
                                //Connection conn = DatabaseConnection.connect();
                                int selectedImmRow = consultation.tbl_imu.getSelectedRow();
                                String selectedImm =  consultation.tbl_imu.getValueAt(selectedImmRow, 0).toString();

                                String sql="SELECT * FROM IMMUNISATION WHERE ENCOUNTER_DATE=? AND IMMU_TYPE =?";
                                //prepare the sql query and execute it
                                PreparedStatement ps3 = Session.getCon_x(1000).prepareStatement(sql);
                                ps3.setString(1,consultation.lbl_immdate.getText());
                                ps3.setString(2,selectedImm);
                                ResultSet rs3 = ps3.executeQuery();

                                while(rs3.next())
                                {
                                   consultation.txt_immSearch.setText(rs3.getString("IMMU_TYPE"));
                                   consultation.txt_immComment.setText(rs3.getString("IMMU_COMMENT"));
                                   consultation.txt_immDate1.setDate(rs3.getDate("IMMU_DATE"));
                                }
                          }
                          catch(Exception ex)
                          {
                                System.out.print(ex);
                          }
                    }
                    });//end tbl_imm

                    //Display data in vital sign table
                    String sql4="SELECT * FROM VITAL_SIGN WHERE ENCOUNTER_DATE=?";
                    //prepare the sql query and execute it
                    PreparedStatement ps4 = Session.getCon_x(1000).prepareStatement(sql4);
                    ps4.setString(1,selectedDate);
                    ResultSet rs4 = ps4.executeQuery();
                    consultation.lbl_vsdate.setText(selectedDate);

                    int index3=0;
                    while(rs4.next())
                    {
                       System.out.print("VS");
                       vsweight = rs4.getString("HEIGHT");
                       vsheight = rs4.getString("WEIGHT");
                       vspulse = rs4.getString("PULSE");
//                       consultation.tbl_vts.setValueAt(vsweight,index3,0);
//                       consultation.tbl_vts.setValueAt(vsheight,index3,1);
//                       consultation.tbl_vts.setValueAt(vspulse,index3,2);
                       index3++;
                    }

                    //Display data to text fields frm vital sign table
//                    consultation.tbl_vts.addMouseListener(new java.awt.event.MouseAdapter(){
//                    public void mouseClicked(java.awt.event.MouseEvent evt) {
//
//                         try
//                         {
//                                //Connection conn = DatabaseConnection.connect();
//                                int selectedVSRow = consultation.tbl_vts.getSelectedRow();
//                                String selectedVS =  consultation.tbl_vts.getValueAt(selectedVSRow, 1).toString();
//
//                                String sql="SELECT * FROM VITAL_SIGN WHERE ENCOUNTER_DATE=? AND WEIGHT =?";
//                                //prepare the sql query and execute it
//                                PreparedStatement ps4 = Session.getCon_x(1000).prepareStatement(sql);
//                                ps4.setString(1,consultation.lbl_vsdate.getText());
//                                ps4.setString(2,selectedVS);
//                                ResultSet rs4 = ps4.executeQuery();
//
//                                while(rs4.next())
//                                {
//                                   consultation.txt_height.setText(rs4.getString("HEIGHT"));
//                                   consultation.txt_weight.setText(rs4.getString("WEIGHT"));
//                                   consultation.txt_bmi.setText(rs4.getString("BMI"));
//                                   consultation.txt_weightStatus.setText(rs4.getString("WEIGHT_STATUS"));
//                                   consultation.txt_headCircumference.setText(rs4.getString("HEAD_CIRCUM"));
//                                   consultation.txt_temperature.setText(rs4.getString("TEMP"));
//                                   consultation.txt_pulse.setText(rs4.getString("PULSE"));
//                                }
//                          }
//                          catch(Exception ex)
//                          {
//                                System.out.print(ex);
//                          }
//                    }
//                    });//end tbl_vs

                    //Display data in drug table
                    String sql5="SELECT * FROM DRUG_ADDICT WHERE ENCOUNTER_DATE=?";
                    //prepare the sql query and execute it
                    PreparedStatement ps5 = Session.getCon_x(1000).prepareStatement(sql5);
                    ps5.setString(1,selectedDate);
                    ResultSet rs5 = ps5.executeQuery();
                    //umar consultation.lbl_drgdate.setText(selectedDate);

                    int index4=0;
                    while(rs5.next())
                    {
                       System.out.print("drug");
                       drugName = rs5.getString("DRUG_NAME");
                       dose = rs5.getString("DOSE");
                       freq = rs5.getString("FREQUENCY");
                       //umar consultation.tbl_drug.setValueAt(drugName,index4,0);
                       //umar consultation.tbl_drug.setValueAt(dose,index4,1);
                       //umar consultation.tbl_drug.setValueAt(freq,index4,2);
                       index4++;
                    }

                    //Display data to text fields frm drug table
//                    consultation.tbl_drug.addMouseListener(new java.awt.event.MouseAdapter(){
//                    public void mouseClicked(java.awt.event.MouseEvent evt) {
//
//                         try
//                         {
//                                //Connection conn = DatabaseConnection.connect();
//                                int selectedDrugRow = consultation.tbl_drug.getSelectedRow();
//                                String selectedDrug =  consultation.tbl_drug.getValueAt(selectedDrugRow, 0).toString();
//
//                                String sql="SELECT * FROM DRUG_ADDICT WHERE ENCOUNTER_DATE=? AND DRUG_NAME =?";
//                                //prepare the sql query and execute it
//                                PreparedStatement ps5 = Session.getCon_x(1000).prepareStatement(sql);
//                                ps5.setString(1,consultation.lbl_drgdate.getText());
//                                ps5.setString(2,selectedDrug);
//                                ResultSet rs5 = ps5.executeQuery();
//
//                                while(rs5.next())
//                                {
//                                    /*umar*/
////                                   consultation.txt_drugSearch.setText(rs5.getString("DRUG_NAME"));
////                                   consultation.txt_dose.setText(rs5.getString("DOSE"));
////                                   consultation.txt_dStrength.setText(rs5.getString("QUANTITY"));
////                                   consultation.txt_drugForm.setText(rs5.getString("FORM"));
////                                   String duration = rs5.getString("DURATION");
////                                   String num = duration.substring(0,1);
////                                   consultation.cbx_drugDduration.setSelectedItem(num);
////                                   String word = duration.substring(1,2);
////                                   System.out.print(word);
////                                   if(word == "D")
////                                   {
////                                        consultation.cbx_drugDuration.setSelectedItem("Day");
////                                   }
//                                   
//
//
//                                }
//                          }
//                          catch(Exception ex)
//                          {
//                                System.out.print(ex);
//                          }
//                    }
//                    });//end tbl_drug

                    //Display data in disability table
                    String sql6="SELECT * FROM DISABILITY WHERE ENCOUNTER_DATE=?";
                    //prepare the sql query and execute it
                    PreparedStatement ps6 = Session.getCon_x(1000).prepareStatement(sql6);
                    ps6.setString(1,selectedDate);
                    ResultSet rs6 = ps6.executeQuery();
                    consultation.lbl_disdate.setText(selectedDate);

                    int index5=0;
                    while(rs6.next())
                    {
                       System.out.print("dis");
                       disType = rs6.getString("DIS_NAME");
                       disDate = rs6.getString("DIS_FROMDATE");
                       consultation.tbl_dab.setValueAt(disType,index5,0);
                       consultation.tbl_dab.setValueAt(disDate,index5,1);
                       index5++;
                    }

                    //Display data to text fields frm disability table
                    consultation.tbl_dab.addMouseListener(new java.awt.event.MouseAdapter(){
                    public void mouseClicked(java.awt.event.MouseEvent evt) {

                         try
                         {
                                //Connection conn = DatabaseConnection.connect();
                                int selectedDisRow = consultation.tbl_dab.getSelectedRow();
                                String selectedDis =  consultation.tbl_dab.getValueAt(selectedDisRow, 0).toString();

                                String sql="SELECT * FROM DISABILITY WHERE ENCOUNTER_DATE=? AND DIS_NAME =?";
                                //prepare the sql query and execute it
                                PreparedStatement ps6 = Session.getCon_x(1000).prepareStatement(sql);
                                ps6.setString(1,consultation.lbl_disdate.getText());
                                ps6.setString(2,selectedDis);
                                ResultSet rs6 = ps6.executeQuery();

                                while(rs6.next())
                                {
                                   consultation.txt_disabilityType.setText(rs6.getString("DIS_NAME"));
                                   consultation.txt_dDate1.setDate(rs6.getDate("DIS_FROMDATE"));
                                   consultation.txt_dComments.setText(rs6.getString("DIS_COM"));
                                }
                          }
                          catch(Exception ex)
                          {
                                System.out.print(ex);
                          }
                    }
                    });//end tbl_dis

                    //Display data in allergy table
                    String sql7="SELECT * FROM ALLERGY WHERE ENCOUNTER_DATE=?";
                    //prepare the sql query and execute it
                    PreparedStatement ps7 = Session.getCon_x(1000).prepareStatement(sql7);
                    ps7.setString(1,selectedDate);
                    ResultSet rs7 = ps7.executeQuery();
//                    consultation.lbl_alldate.setText(selectedDate);

                    int index6=0;
                    while(rs7.next())
                    {
                       System.out.print("all");
                       allType = rs7.getString("ALL_NAME");
                       allDate = rs7.getString("ALL_FROMDATE");
//                       consultation.tbl_alg.setValueAt(allType,index6,0);
//                       consultation.tbl_alg.setValueAt(allDate,index6,1);
                       index6++;
                    }

                    //Display data to text fields frm ALLERGY table
//                    consultation.tbl_alg.addMouseListener(new java.awt.event.MouseAdapter(){
//                    public void mouseClicked(java.awt.event.MouseEvent evt) {
//
//                         try
//                         {
//                                //Connection conn = DatabaseConnection.connect();
//                                int selectedAllRow = consultation.tbl_alg.getSelectedRow();
//                                String selectedAll =  consultation.tbl_alg.getValueAt(selectedAllRow, 0).toString();
//
//                                String sql="SELECT * FROM ALLERGY WHERE ENCOUNTER_DATE=? AND ALL_NAME =?";
//                                //prepare the sql query and execute it
//                                PreparedStatement ps7 = Session.getCon_x(1000).prepareStatement(sql);
//                                ps7.setString(1,consultation.lbl_alldate.getText());
//                                ps7.setString(2,selectedAll);
//                                ResultSet rs7 = ps7.executeQuery();
//
//                                while(rs7.next())
//                                {
//                                   consultation.txt_allergySearch.setText(rs7.getString("ALL_NAME"));
//                                   consultation.txt_allergyDate2.setDate(rs7.getDate("ALL_FROMDATE"));
//                                   consultation.txt_allergyComments.setText(rs7.getString("ALL_COM"));
//                                }
//                          }
//                          catch(Exception ex)
//                          {
//                                System.out.print(ex);
//                          }
//                    }
//                    });//end tbl_all

                    //Display data in social history table
                    String sql8="SELECT * FROM SOCIAL_HISTORY WHERE ENCOUNTER_DATE=?";
                    //prepare the sql query and execute it
                    PreparedStatement ps8 = Session.getCon_x(1000).prepareStatement(sql8);
                    ps8.setString(1,selectedDate);
                    ResultSet rs8 = ps8.executeQuery();
                    consultation.lbl_shdate.setText(selectedDate);

                    int index7=0;
                    while(rs8.next())
                    {
                       System.out.print("SH");
                       shType = rs8.getString("SH_NAME");
                       shDate = rs8.getString("SH_FROMDATE");
                       consultation.tbl_sh.setValueAt(shType,index7,0);
                       consultation.tbl_sh.setValueAt(shDate,index7,1);
                       index7++;
                    }

                    //Display data to text fields frm social history table
                    consultation.tbl_sh.addMouseListener(new java.awt.event.MouseAdapter(){
                    public void mouseClicked(java.awt.event.MouseEvent evt) {

                         try
                         {
                                //Connection conn = DatabaseConnection.connect();
                                int selectedSHRow = consultation.tbl_sh.getSelectedRow();
                                String selectedSH =  consultation.tbl_sh.getValueAt(selectedSHRow, 0).toString();

                                String sql="SELECT * FROM SOCIAL_HISTORY WHERE ENCOUNTER_DATE=? AND SH_NAME =?";
                                //prepare the sql query and execute it
                                PreparedStatement ps8 = Session.getCon_x(1000).prepareStatement(sql);
                                ps8.setString(1,consultation.lbl_shdate.getText());
                                ps8.setString(2,selectedSH);
                                ResultSet rs8 = ps8.executeQuery();

                                while(rs8.next())
                                {
                                   consultation.txt_socialProblem.setText(rs8.getString("SH_NAME"));
                                   consultation.txt_socialDate1.setDate(rs8.getDate("SH_FROMDATE"));
                                   consultation.txt_socialComment.setText(rs8.getString("SH_COM"));
                                }
                          }
                          catch(Exception ex)
                          {
                                System.out.print(ex);
                          }
                    }
                    });//end tbl_sh

                //clean the results and data
                ps.close();
                result.close();

                }catch(Exception ex){
                    System.out.println(ex.getMessage());
               }
            }
        });
    }//GEN-LAST:event_formWindowActivated

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed

        this.dispose();
        
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientRecordGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_records;
    // End of variables declaration//GEN-END:variables

}
