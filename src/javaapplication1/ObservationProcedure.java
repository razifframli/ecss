/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package javaapplication1;

import DBConnection.DBConnection;
import Helper.J;
import java.util.ArrayList;

/**
 *
 * @author End User
 */
public class ObservationProcedure extends javax.swing.JFrame {

    /**
     * Creates new form ObservationProcedure
     */
    
    private String pmi_no = "";
    
    public ObservationProcedure(String pmiNo) {
        initComponents();
        
        pmi_no = pmiNo;
        clearProceduresTable();
        getData(pmiNo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel11 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_procedures2 = new javax.swing.JTable();
        pnl_procedures = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_order_date = new javax.swing.JLabel();
        lbl_order_no = new javax.swing.JLabel();
        lbl_location_code = new javax.swing.JLabel();
        lbl_arrival_date = new javax.swing.JLabel();
        lbl_doctor_name = new javax.swing.JLabel();
        lbl_doctor_id = new javax.swing.JLabel();
        pnl_procedures1 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbl_procedure_detail2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Observation Procedure");

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Order List"));

        tbl_procedures2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order No.", "PMI No.", "Order Date", "Location Code", "Arrival Date", "Doctor ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_procedures2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_procedures2MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbl_procedures2);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_procedures.setBorder(javax.swing.BorderFactory.createTitledBorder("Procedures"));

        jLabel1.setText("Order No.:");

        jLabel2.setText("Order Date:");

        jLabel3.setText("Location Code:");

        jLabel4.setText("Arrival Date:");

        jLabel5.setText("Doctor's ID:");

        jLabel6.setText("Doctor's Name:");

        lbl_order_date.setText("-");

        lbl_order_no.setText("-");

        lbl_location_code.setText("-");

        lbl_arrival_date.setText("-");

        lbl_doctor_name.setText("-");

        lbl_doctor_id.setText("-");

        tbl_procedure_detail2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Procedure Code", "Procedure Name", "Comments", "Doctor's Comments", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tbl_procedure_detail2);

        javax.swing.GroupLayout pnl_procedures1Layout = new javax.swing.GroupLayout(pnl_procedures1);
        pnl_procedures1.setLayout(pnl_procedures1Layout);
        pnl_procedures1Layout.setHorizontalGroup(
            pnl_procedures1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE)
        );
        pnl_procedures1Layout.setVerticalGroup(
            pnl_procedures1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
        );

        jButton3.setText("Submit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_proceduresLayout = new javax.swing.GroupLayout(pnl_procedures);
        pnl_procedures.setLayout(pnl_proceduresLayout);
        pnl_proceduresLayout.setHorizontalGroup(
            pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_proceduresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_procedures1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl_proceduresLayout.createSequentialGroup()
                        .addGroup(pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_proceduresLayout.createSequentialGroup()
                                .addGroup(pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_order_date, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_order_no, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_location_code, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_arrival_date, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_doctor_name, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(lbl_doctor_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnl_proceduresLayout.setVerticalGroup(
            pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_proceduresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(lbl_order_no)
                    .addComponent(lbl_location_code)
                    .addComponent(lbl_doctor_id))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_proceduresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(lbl_order_date)
                    .addComponent(lbl_arrival_date)
                    .addComponent(lbl_doctor_name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnl_procedures1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_procedures, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addComponent(pnl_procedures, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(362, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private final static int NUM_COLS_MASTER = 6;
    private final static int NUM_ROWS_MASTER = 50;
    
    private final static int NUM_COLS_DETAIL = 5;
    private final static int NUM_ROWS_DETAIL = 50;
    
    protected void clearProcedureDetailTable() {
        try {
            for (int i = 0; i < NUM_ROWS_DETAIL; i++) {
                for (int j = 0; j < NUM_COLS_DETAIL-1; j++) {
                    tbl_procedure_detail2.getModel().setValueAt("", i, j);
                }
                tbl_procedure_detail2.getModel().setValueAt(false, i, NUM_COLS_DETAIL-1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void tbl_procedures2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_procedures2MouseClicked
        // TODO add your handling code here:
        int index = tbl_procedures2.getSelectedRow();
        String orderNo = (String) tbl_procedures2.getValueAt(index, 0);
        String pmiNo = (String) tbl_procedures2.getValueAt(index, 1);
        String orderDate = (String) tbl_procedures2.getValueAt(index, 2);
        String locationCode = (String) tbl_procedures2.getValueAt(index, 3);
        String arrivalDate = (String) tbl_procedures2.getValueAt(index, 4);
        String doctorId = (String) tbl_procedures2.getValueAt(index, 5);

        try {
            

            lbl_order_no.setText(orderNo);
            lbl_order_date.setText(orderDate);
            lbl_location_code.setText(locationCode);
            lbl_arrival_date.setText(arrivalDate);
            lbl_doctor_id.setText(doctorId);

            clearProcedureDetailTable();
            ArrayList<ArrayList<String>> getProcedureDetail = DBConnection.getImpl().getProcedureDetail(orderNo);
            for (int i = 0; i < getProcedureDetail.size() && i < NUM_ROWS_DETAIL; i++) {
                tbl_procedure_detail2.setValueAt(getProcedureDetail.get(i).get(1), i, 0);
                tbl_procedure_detail2.setValueAt(getProcedureDetail.get(i).get(2), i, 1);
                tbl_procedure_detail2.setValueAt(getProcedureDetail.get(i).get(3), i, 2);
                tbl_procedure_detail2.setValueAt(getProcedureDetail.get(i).get(4), i, 3);
                boolean status = (getProcedureDetail.get(i).get(5).equals("1")) ? (false) : (true);
                tbl_procedure_detail2.setValueAt(status, i, 4);
            }

        } catch (Exception ex) {
            J.o("Error", "Error: "+ex.getMessage(), 0);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_tbl_procedures2MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String orderNo = lbl_order_no.getText();
        ArrayList<ArrayList<String>> prod1 = new ArrayList<ArrayList<String>>();
        for (int i = 0; i < NUM_ROWS_DETAIL; i++) {
            if (!tbl_procedure_detail2.getModel().getValueAt(i, 0).equals("") && Boolean.parseBoolean(tbl_procedure_detail2.getModel().getValueAt(i, 4).toString()) == true) {
                String procedure_cd = (String) tbl_procedure_detail2.getValueAt(i, 0);
                String procedure_name = (String) tbl_procedure_detail2.getValueAt(i, 1);
                String comments = (String) tbl_procedure_detail2.getValueAt(i, 2);
                String comments_doc = (String) tbl_procedure_detail2.getValueAt(i, 3);
                boolean status = (Boolean) tbl_procedure_detail2.getValueAt(i, 4);
                System.out.println(procedure_cd+"|"+procedure_name+"|"+comments+"|"+comments_doc+"|"+status);
                ArrayList<String> data_prod = new ArrayList<String>();
                data_prod.add(comments);
                data_prod.add(comments_doc);
                String status1 = (status == true) ? ("2") : ("1");
                data_prod.add(status1);
                data_prod.add(orderNo);
                data_prod.add(procedure_cd);
                prod1.add(data_prod);
            }
        }
        try {
            boolean status_prod = DBConnection.getImpl().updateProcedures(prod1);
            if (status_prod) {
                J.o("Procedure", "Submit success..", 1);
                getData(pmi_no);
            } else {
                J.o("Procedure", "Submit failed!", 0);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    protected void getData(String pmino) {
        clearProceduresTable();
        try {
            ArrayList<ArrayList<String>> procedures = DBConnection.getImpl().getProceduresBasedOnPmiNo(pmino);
            for (int i = 0; i < procedures.size() && i < NUM_ROWS_MASTER; i++) {
                for (int j = 0; j < procedures.get(i).size(); j++) {
                    tbl_procedures2.getModel().setValueAt(procedures.get(i).get(j), i, j);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    protected void clearProceduresTable() {
        try {
            for (int i = 0; i < NUM_ROWS_MASTER; i++) {
                for (int j = 0; j < NUM_COLS_MASTER; j++) {
                    tbl_procedures2.getModel().setValueAt("", i, j);
                }
            }
            for (int i = 0; i < NUM_ROWS_DETAIL; i++) {
                for (int j = 0; j < NUM_COLS_DETAIL-1; j++) {
                    tbl_procedure_detail2.getModel().setValueAt("", i, j);
                }
                tbl_procedure_detail2.getModel().setValueAt(false, i, NUM_COLS_DETAIL-1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ObservationProcedure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ObservationProcedure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ObservationProcedure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ObservationProcedure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ObservationProcedure().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    protected static javax.swing.JLabel lbl_arrival_date;
    protected static javax.swing.JLabel lbl_doctor_id;
    protected static javax.swing.JLabel lbl_doctor_name;
    protected static javax.swing.JLabel lbl_location_code;
    protected static javax.swing.JLabel lbl_order_date;
    protected static javax.swing.JLabel lbl_order_no;
    protected static javax.swing.JPanel pnl_procedures;
    protected static javax.swing.JPanel pnl_procedures1;
    protected static javax.swing.JTable tbl_procedure_detail2;
    protected static javax.swing.JTable tbl_procedures2;
    // End of variables declaration//GEN-END:variables
}
